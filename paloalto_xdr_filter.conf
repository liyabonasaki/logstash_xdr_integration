#filter
input {
  tcp {
    port =>  ['input_port']
    codec => json
    tags => ['paloalto_xdr']
  }
}

filter {
 split {
   field => "[reply][incidents]"
 }
}

filter {
  ruby {
    code => '
        event.get("[reply][incidents]").each do |k, v|
        event.set(k, v)
        event.remove("[reply]")
        end '
  }
}

filter {
  date {
    match => ["creation_time", "UNIX", "UNIX_MS" ]
    target => "creation_time"
  }
  date {
    match => ["modification_time", "UNIX", "UNIX_MS" ]
    target => "modification_time"
  }
  date {
    match => ["resolved_timestamp", "UNIX", "UNIX_MS" ]
    target => "resolved_timestamp"
  }
}

filter {
  if "paloalto_xdr" in [tags] {
    mutate {
      add_field => [ "nview_client", "liya" ]
      add_field => [ "log_src", "paloalto_xdr" ]
      rename=>  { "xdr_url" => "xdr_url" }
      rename => { "modification_time" => "modification_time" }
      rename => { "user_count" => "user_count" }
      rename => { "creation_time" => "creation_time" }
      rename => { "manual_description" => "manual_description" }
      rename => { "status" => "status" }
      rename => { "severity" => "severity" }
      rename => { "host_count" => "host_count" }
      rename => { "mitre_techniques_ids_and_names" => "mitre_techniques_ids_and_names" }
      rename => { "incident_name" => "incident_name" }
      rename => { "assigned_user_pretty_name" => "display_name" }
      rename => { "manual_score" => "manual_score" }
      rename => { "wildfire_hits" => "wildfire_hits" }
      rename => { "mitre_tactics_ids_and_names" => "mitre_tactics_ids_and_names" }
      rename => { "rule_based_score" => "rule_based_score" }
      rename => { "alert_count" => "alert_count" }
      rename => { "high_severity_alert_count" => "high_severity_alert_count" }
      rename => { "resolved_timestamp" => "resolved_timestamp" }
      rename => { "low_severity_alert_count" => "low_severity_alert_count" }
      rename => { "alert_categories" => "catergory" }
      rename => { "alerts_grouping_status" => "alerts_grouping_status" }
      rename => { "notes" => "notes" }
      rename => { "incident_id" => "incident_id" }
      rename => { "manual_severity" => "manual_severity" }
      rename => { "incident_sources" => "incident_sources" }
      rename => { "detection_time" => "detection_time" }
      rename => { "description" => "description" }
      rename => { "med_severity_alert_count" => "med_severity_alert_count" }
      rename => { "assigned_user_mail" => "email" }
      rename => { "hosts" => "hosts" }
      rename => { "resolve_comment" => "resolve_comment" }
      rename => { "starred" => "starred" }
      remove_field  => ["catch_all"]
    }
  }
}

filter {
   fingerprint {
      method => "MURMUR3"
      target => "fingerprint"
      source => ["incident_id","modification_time"]
      base64encode => true
   }
}

output {
  if "paloalto_xdr" in [tags] {
    rabbitmq {
      host => "127.0.0.1" # will be replaced after confirmation
      exchange => "paloalto_xdr_exchange"
      exchange_type => "direct"
      key => "paloalto_xdr"
    }
    lumberjack {
      hosts => ['output_host_ip']
      port => ['output_host_port']
      ssl_certificate => "/etc/logstash/ssl/lumberjack.crt"
      codec => "json"
    }
    stdout {
      codec => rubydebug
    }
  }
}